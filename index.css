/* index.css */
:root {
    /* Dark Theme Values */
    --md-sys-color-primary: #D0BCFF;
    --md-sys-color-on-primary: #381E72;
    --md-sys-color-primary-container: #4A4458;
    /* Adjusted for dark */
    --md-sys-color-on-primary-container: #EADDFF;
    --md-sys-color-secondary: #CCC2DC;
    --md-sys-color-on-secondary: #332D41;
    --md-sys-color-secondary-container: #4A4458;
    --md-sys-color-on-secondary-container: #E8DEF8;
    --md-sys-color-tertiary: #EFB8C8;
    --md-sys-color-on-tertiary: #492532;
    --md-sys-color-tertiary-container: #633B48;
    --md-sys-color-on-tertiary-container: #FFD8E4;
    --md-sys-color-error: #F2B8B5;
    --md-sys-color-on-error: #601410;
    --md-sys-color-error-container: #8C1D18;
    --md-sys-color-on-error-container: #F9DEDC;
    --md-sys-color-background: #1C1B1F;
    /* Dark background */
    --md-sys-color-on-background: #E6E1E5;
    --md-sys-color-surface: #1C1B1F;
    /* Can be same as background or slightly different */
    --md-sys-color-on-surface: #E6E1E5;
    --md-sys-color-surface-variant: #49454F;
    /* Darker surface variant */
    --md-sys-color-on-surface-variant: #CAC4D0;
    --md-sys-color-outline: #938F99;
    --md-sys-color-shadow: #000000;
    /* Shadow is usually black, its opacity is what matters */
    --md-sys-color-inverse-surface: #E6E1E5;
    /* Light for inverse elements */
    --md-sys-color-inverse-on-surface: #313033;
    /* Dark text on light inverse */
    --md-sys-color-inverse-primary: #6750A4;
    /* Original primary for inverse contexts */

    --border-radius-small: 4px;
    --border-radius-medium: 8px;
    --border-radius-large: 16px;
    --border-radius-extra-large: 28px;
    --border-radius-full: 999px;

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;
    background-color: var(--md-sys-color-background);
    color: var(--md-sys-color-on-background);
    display: flex;
    /* Changed from flex to ensure .app-layout is the direct child controlling height */
    flex-direction: column;
    height: 100vh;
    /* Full viewport height */
    overflow: hidden;
    /* Prevent body scrolling */
}

/* --- App Layout --- */
.app-layout {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    /* Allow .app-layout to grow and fill body */
    height: 100%;
    /* Take full height of parent (body) */
    overflow: hidden;
    /* Prevent .app-layout from scrolling if children overflow unexpectedly */
}

.app-header {
    background-color: var(--md-sys-color-surface-variant);
    color: var(--md-sys-color-on-surface-variant);
    padding: 12px 24px;
    /* Reduced padding slightly */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    /* Adjusted shadow for dark mode */
    text-align: center;
    flex-shrink: 0;
    /* Prevent header from shrinking */
}

.app-header h1 {
    margin: 0;
    font-size: 1.25rem;
    /* Reduced font size slightly */
    font-weight: 500;
}

.app-main-content {
    flex-grow: 1;
    /* This will take up the remaining vertical space */
    padding: 16px;
    /* Reduced padding */
    display: flex;
    /* Use flex to center the grid */
    justify-content: center;
    align-items: center;
    /* Center the grid vertically and horizontally */
    overflow: hidden;
    /* Prevent this section from causing scroll if grid is too big */
}

#background-layer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
    /* Behind everything */
    background: var(--md-sys-color-background);
    /* Fallback */
    transition: background-image 0.5s ease-out;
    opacity: 0.5;
    /* Make background more subtle */
}


#prompt-grid-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    /* Explicitly define 4 rows */
    gap: 12px;
    /* Reduced gap */
    width: 100%;
    /* Take full width of parent (.app-main-content) */
    height: 100%;
    /* Take full height of parent (.app-main-content) */
    /* max-width: 90vmin;  -- Remove explicit max-width/height using vmin */
    /* max-height: 90vmin; -- Remove */
    /* aspect-ratio: 1 / 1; -- May not be needed if width/height are 100% of a flexible container */
    /* Ensure grid items don't overflow their container, which is now flex-sized */
    box-sizing: border-box;
}

.app-footer {
    padding: 12px 20px;
    /* Reduced padding */
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--md-sys-color-surface-variant);
    border-top: 1px solid var(--md-sys-color-outline);
    /* position: sticky; -- Not needed if .app-layout is flex column with fixed header/footer */
    /* bottom: 0; */
    z-index: 10;
    flex-shrink: 0;
    /* Prevent footer from shrinking */
}

.toast-container {
    position: fixed;
    /* top: 20px; */
    /* Changed from bottom */
    /* NEW */
    top: 0;
    left: 50%;
    width: 100%;
    /* Make it full width for top bar style */
    max-width: 100%;
    /* Override previous max-width */
    transform: translateX(-50%) translateY(-150%);
    /* Start off-screen above */
    background-color: var(--md-sys-color-inverse-surface);
    color: var(--md-sys-color-inverse-on-surface);
    /* padding: 12px 18px; */
    /* Will adjust padding for full width */
    /* border-radius: var(--border-radius-medium); */
    /* Remove radius for top bar style */
    border-bottom-left-radius: var(--border-radius-medium);
    /* Optional: slightly rounded bottom corners */
    border-bottom-right-radius: var(--border-radius-medium);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    /* Shadow might need adjustment */
    display: flex;
    align-items: center;
    justify-content: center;
    /* Center content for full-width toast */
    /* gap: 12px; */
    /* min-width: 280px; */
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1000;
    font-size: 0.875rem;
    /* 14px */
    /* NEW */
    padding: 16px 24px;
    /* Adjusted padding */
    box-sizing: border-box;
}

.toast-container.showing {
    transform: translateX(-50%) translateY(0);
}

.toast-message-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: 600px;
    /* Max width for the content within the full-width toast */
}

.toast-text {
    flex-grow: 1;
    line-height: 1.4;
}

.toast-close-button {
    background: none;
    border: none;
    color: var(--md-sys-color-inverse-on-surface);
    cursor: pointer;
    padding: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-full);
    margin-left: 8px;
}

.toast-close-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.toast-close-button .material-symbols-outlined {
    font-size: 1.25rem;
    /* 20px */
}


/* --- Play/Pause Button --- */
play-pause-button .icon-button {
    /* Target the button inside play-pause-button */
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
    border: none;
    width: 64px;
    height: 64px;
    border-radius: var(--border-radius-extra-large);
    /* More Material You like */
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(var(--md-sys-color-shadow), 0.2);
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.2s;
    outline-offset: 2px;
}

play-pause-button .icon-button:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 10px rgba(var(--md-sys-color-shadow), 0.25);
}

play-pause-button .icon-button:active {
    transform: scale(0.98);
}

play-pause-button .icon-button svg {
    width: 32px;
    /* Larger icon */
    height: 32px;
    fill: currentColor;
}

/* Loader specific styles for PlayPauseButton */
play-pause-button .loader-svg {
    animation: spin 1s linear infinite;
    transform-origin: center;
}

play-pause-button .loader-bg {
    fill: none;
    stroke: currentColor;
    stroke-width: 2.5;
    opacity: 0.3;
}

play-pause-button .loader-fg {
    fill: none;
    stroke: currentColor;
    stroke-width: 2.5;
    stroke-linecap: round;
    stroke-dasharray: 60;
    /* Adjust for desired arc length */
    stroke-dashoffset: 45;
    /* Adjust for desired start position */
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}


prompt-controller {
    display: flex;
    /* Use flex to make internal content fill */
}

.prompt-card {
    background-color: var(--md-sys-color-surface);
    /* Changed from surface-variant for more contrast */
    color: var(--md-sys-color-on-surface);
    border-radius: var(--border-radius-large);
    padding: 12px;
    /* Reduced padding */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    /* Better distribution for text and slider */
    gap: 8px;
    /* Reduced gap */
    position: relative;
    overflow: hidden;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    /* Slightly stronger shadow for dark mode */
    transition: box-shadow 0.2s ease-in-out;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
}

.prompt-card:hover {
    box-shadow: 0 4px 8px rgba(var(--md-sys-color-shadow), 0.15);
}

.prompt-halo {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    /* Large enough to create a glow effect */
    height: 200%;
    border-radius: 50%;
    background-color: var(--prompt-halo-color, var(--md-sys-color-primary));
    /* Fallback */
    transform: translate(-50%, -50%) scale(0.8);
    /* Start smaller */
    pointer-events: none;
    z-index: 0;
    transition: opacity 0.3s ease, transform 0.3s ease;
    opacity: 0;
    /* Default hidden, controlled by inline style */
}

.prompt-text-input {
    font-size: 0.875rem; /* 14px, adjust as needed for space */
    font-weight: 500;
    padding: 6px 10px; /* Reduced padding */
    border-radius: var(--border-radius-medium);
    background-color: var(--md-sys-color-surface-variant); /* Contrast with card surface */
    color: var(--md-sys-color-on-surface-variant);
    border: 1px solid var(--md-sys-color-outline);
    text-align: center;
    outline: none;
    width: calc(100% - 24px);
    /* Full width minus padding */
    box-sizing: border-box;
    z-index: 1;
    /* Above halo */
    transition: border-color 0.2s;
    min-height: auto;
    /* Ensure it has some height */
    display: inline-block;
    /* For contenteditable to behave */
    line-height: 1.4;
}

.prompt-text-input:focus {
    border-color: var(--slider-thumb-color, var(--md-sys-color-primary));
    /* Use dynamic color */
    box-shadow: 0 0 0 2px var(--slider-thumb-color-focus, var(--md-sys-color-primary-container));
}

/* Filtered prompt style */
prompt-controller[filtered] .prompt-card {
    border: 2px solid var(--md-sys-color-error);
}

prompt-controller[filtered] .prompt-text-input {
    background-color: var(--md-sys-color-error-container);
    color: var(--md-sys-color-on-error-container);
    border-color: var(--md-sys-color-error);
}


.slider-container {
    width: 100%;
    position: relative;
    z-index: 1;
    height: 20px; /* Reduced height */
    display: flex;
    align-items: center;
}

.weight-slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 6px;
    /* Track height */
    background: var(--md-sys-color-outline);
    /* Track background */
    border-radius: var(--border-radius-full);
    outline: none;
    cursor: pointer;
    margin: 10px 0;
    /* Vertical margin for thumb overflow */
}

/* Custom track fill (visual only, slider value controls actual fill) */
.slider-track-fill {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    height: 6px;
    background-color: var(--slider-thumb-color, var(--md-sys-color-primary));
    /* Dynamic color */
    border-radius: var(--border-radius-full);
    pointer-events: none;
    /* Doesn't interfere with slider interaction */
    z-index: -1;
    /* Behind the actual slider thumb */
}


.weight-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 18px;
    /* Thumb size */
    height: 18px;
    background: var(--slider-thumb-color, var(--md-sys-color-primary));
    /* Dynamic color */
    border-radius: 50%;
    border: 2px solid var(--md-sys-color-surface);
    /* Border for contrast */
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    transition: transform 0.1s ease-out;
}

.weight-slider::-webkit-slider-thumb:hover {
    transform: scale(1.1);
}

.weight-slider::-moz-range-thumb {
    width: 18px;
    height: 18px;
    background: var(--slider-thumb-color, var(--md-sys-color-primary));
    border-radius: 50%;
    border: 2px solid var(--md-sys-color-surface);
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    transition: transform 0.1s ease-out;
}

.weight-slider::-moz-range-thumb:hover {
    transform: scale(1.1);
}

.weight-slider::-ms-thumb {
    width: 20px;
    height: 20px;
    background: var(--slider-thumb-color, var(--md-sys-color-primary));
    border-radius: 50%;
    border: 2px solid var(--md-sys-color-surface);
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    transition: transform 0.1s ease-out;
}

.weight-slider::-ms-thumb:hover {
    transform: scale(1.1);
}