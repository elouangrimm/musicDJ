:root {
    --md-sys-color-primary: #D0BCFF;
    --md-sys-color-on-primary: #381E72;
    --md-sys-color-primary-container: #4A4458;
    --md-sys-color-on-primary-container: #EADDFF;
    --md-sys-color-secondary: #CCC2DC;
    --md-sys-color-on-secondary: #332D41;
    --md-sys-color-secondary-container: #4A4458;
    --md-sys-color-on-secondary-container: #E8DEF8;
    --md-sys-color-tertiary: #EFB8C8;
    --md-sys-color-on-tertiary: #492532;
    --md-sys-color-tertiary-container: #633B48;
    --md-sys-color-on-tertiary-container: #FFD8E4;
    --md-sys-color-error: #F2B8B5;
    --md-sys-color-on-error: #601410;
    --md-sys-color-error-container: #8C1D18;
    --md-sys-color-on-error-container: #F9DEDC;
    --md-sys-color-background: #1C1B1F;
    --md-sys-color-on-background: #E6E1E5;
    --md-sys-color-surface: #1C1B1F;
    --md-sys-color-on-surface: #E6E1E5;
    --md-sys-color-surface-variant: #49454F;
    --md-sys-color-on-surface-variant: #CAC4D0;
    --md-sys-color-outline: #938F99;
    --md-sys-color-shadow: #000000;
    --md-sys-color-inverse-surface: #E6E1E5;
    --md-sys-color-inverse-on-surface: #313033;
    --md-sys-color-inverse-primary: #6750A4;

    --border-radius-small: 4px;
    --border-radius-medium: 8px;
    --border-radius-large: 16px;
    --border-radius-extra-large: 28px;
    --border-radius-full: 999px;

    --footer-height: 80px;
    --header-height: 60px;

    --slider-thumb-size: 18px;
    --slider-track-height: 4px;
    /* Visible track height */
    --slider-track-background-off: var(--md-sys-color-surface-variant);

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;
    background-color: var(--md-sys-color-background);
    color: var(--md-sys-color-on-background);
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
    /* Prevent body scrolling */
}

.app-layout {
    display: flex;
    flex-direction: column;
    height: 100%;
    /* Occupy full body height */
    position: relative;
    /* For positioning footer */
}

.app-header {
    background-color: var(--md-sys-color-surface-variant);
    color: var(--md-sys-color-on-surface-variant);
    padding: 12px 24px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    text-align: center;
    flex-shrink: 0;
    height: var(--header-height);
    box-sizing: border-box;
    z-index: 10;
    /* Keep header above background */
}

.app-header h1 {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 500;
    line-height: calc(var(--header-height) - 24px);
    /* Center text vertically */
}

.app-main-content {
    flex-grow: 1;
    /* Takes up space between header and footer */
    /* Calculate available height for content, considering header and footer */
    height: calc(100vh - var(--header-height) - var(--footer-height));
    padding: 16px;
    display: flex;
    justify-content: center;
    /* Center grid horizontally */
    align-items: center;
    /* Center grid vertically */
    overflow: hidden;
    /* Important: prevents this section from scrolling, grid will handle its own scroll if needed */
    box-sizing: border-box;
}

#background-layer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
    background: var(--md-sys-color-background);
    transition: background-image 0.5s ease-out;
    opacity: 0.5;
}

#prompt-grid-container {
    display: grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    /* Ensure 4 columns, allow shrinking */
    /* grid-template-rows: repeat(4, 1fr); -- Let content and aspect-ratio define row height */
    gap: 12px;

    /* Sizing the grid to fit within app-main-content and maintain square cells */
    /* Maximize size while respecting parent constraints and cell aspect ratio */
    max-width: 100%;
    max-height: 100%;
    /* We want the *cells* to be square, not necessarily the whole grid container if it needs to scroll */
    /* The aspect ratio of cells will be handled by prompt-controller styles */
    overflow-x: auto;
    /* Allow horizontal scroll if needed */
    overflow-y: hidden;
    /* Generally, vertical scroll should be avoided for the grid itself */
    padding: 4px;
    /* Small padding for scrollbar aesthetics if it appears */
    box-sizing: border-box;
}

.app-footer {
    height: var(--footer-height);
    box-sizing: border-box;
    padding: 0 20px;
    /* Adjust padding for content centering */
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--md-sys-color-surface-variant);
    border-top: 1px solid var(--md-sys-color-outline);
    width: 100%;
    /* Full width */
    position: fixed;
    /* Fixed positioning */
    bottom: 0;
    /* Stick to bottom */
    left: 0;
    z-index: 20;
    /* Above other content */
    flex-shrink: 0;
}

.toast-container {
    position: fixed;
    /* top: 20px; */
    /* Changed from bottom */
    /* NEW */
    top: 0;
    left: 50%;
    width: 100%;
    /* Make it full width for top bar style */
    max-width: 100%;
    /* Override previous max-width */
    transform: translateX(-50%) translateY(-150%);
    /* Start off-screen above */
    background-color: var(--md-sys-color-inverse-surface);
    color: var(--md-sys-color-inverse-on-surface);
    /* padding: 12px 18px; */
    /* Will adjust padding for full width */
    /* border-radius: var(--border-radius-medium); */
    /* Remove radius for top bar style */
    border-bottom-left-radius: var(--border-radius-medium);
    /* Optional: slightly rounded bottom corners */
    border-bottom-right-radius: var(--border-radius-medium);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    /* Shadow might need adjustment */
    display: flex;
    align-items: center;
    justify-content: center;
    /* Center content for full-width toast */
    /* gap: 12px; */
    /* min-width: 280px; */
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1000;
    font-size: 0.875rem;
    /* 14px */
    /* NEW */
    padding: 16px 24px;
    /* Adjusted padding */
    box-sizing: border-box;
}

.toast-container.showing {
    transform: translateX(-50%) translateY(0);
}

.toast-message-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    max-width: 600px;
    /* Max width for the content within the full-width toast */
}

.toast-text {
    flex-grow: 1;
    line-height: 1.4;
}

.toast-close-button {
    background: none;
    border: none;
    color: var(--md-sys-color-inverse-on-surface);
    cursor: pointer;
    padding: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-full);
    margin-left: 8px;
}

.toast-close-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.toast-close-button .material-symbols-outlined {
    font-size: 1.25rem;
    /* 20px */
}


/* --- Play/Pause Button --- */
play-pause-button .icon-button {
    /* Target the button inside play-pause-button */
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
    border: none;
    width: 56px;
    height: 56px;
    border-radius: var(--border-radius-extra-large);
    /* More Material You like */
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(var(--md-sys-color-shadow), 0.2);
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.2s;
    outline-offset: 2px;
}

play-pause-button .icon-button:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 10px rgba(var(--md-sys-color-shadow), 0.25);
}

play-pause-button .icon-button:active {
    transform: scale(0.98);
}

play-pause-button .icon-button svg {
    width: 28px;
    /* Larger icon */
    height: 28px;
    fill: currentColor;
}

/* Loader specific styles for PlayPauseButton */
play-pause-button .loader-svg {
    animation: spin 1s linear infinite;
    transform-origin: center;
}

play-pause-button .loader-bg {
    fill: none;
    stroke: currentColor;
    stroke-width: 2.5;
    opacity: 0.3;
}

play-pause-button .loader-fg {
    fill: none;
    stroke: currentColor;
    stroke-width: 2.5;
    stroke-linecap: round;
    stroke-dasharray: 60;
    /* Adjust for desired arc length */
    stroke-dashoffset: 45;
    /* Adjust for desired start position */
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}


prompt-controller {
    display: flex;
    /* To help prompt-card fill the grid cell */
    aspect-ratio: 1 / 1;
    /* MAKE PROMPT CONTROLLER (THE GRID ITEM) SQUARE */
    min-width: 100px;
    /* Minimum sensible size for a prompt controller */
    min-height: 100px;
}

.prompt-card {
    background-color: var(--md-sys-color-surface);
    color: var(--md-sys-color-on-surface);
    border-radius: var(--border-radius-large);
    padding: 10px;
    /* Adjusted padding for potentially smaller cells */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    /* Distribute text and slider */
    gap: 8px;
    position: relative;
    overflow: hidden;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    transition: box-shadow 0.2s ease-in-out;
    width: 100%;
    /* Fill the square prompt-controller */
    height: 100%;
    /* Fill the square prompt-controller */
    box-sizing: border-box;
}

.prompt-card:hover {
    box-shadow: 0 4px 8px rgba(var(--md-sys-color-shadow), 0.15);
}

.prompt-halo {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    /* Large enough to create a glow effect */
    height: 200%;
    border-radius: 50%;
    background-color: var(--prompt-halo-color, var(--md-sys-color-primary));
    /* Fallback */
    transform: translate(-50%, -50%) scale(0.8);
    /* Start smaller */
    pointer-events: none;
    z-index: 0;
    transition: opacity 0.3s ease, transform 0.3s ease;
    opacity: 0;
    /* Default hidden, controlled by inline style */
}

.prompt-text-input {
    font-size: calc(0.6em + 0.5vmin);
    /* Responsive font size based on viewport, adjust base and factor */
    font-weight: 500;
    padding: 6px 8px;
    border-radius: var(--border-radius-medium);
    background-color: var(--md-sys-color-surface-variant);
    color: var(--md-sys-color-on-surface-variant);
    border: 1px solid var(--md-sys-color-outline);
    text-align: center;
    outline: none;
    width: calc(100% - 16px);
    /* Adjusted width */
    box-sizing: border-box;
    z-index: 1;
    transition: border-color 0.2s;
    line-height: 1.3;
    overflow: hidden;
    /* Prevent text from making card bigger */
    text-overflow: ellipsis;
    /* Show ... if text is too long */
    white-space: nowrap;
    /* Keep text on one line for simplicity */
    max-height: 2.8em;
    /* Limit height of text input for very small cards */
}

.prompt-text-input:focus {
    border-color: var(--slider-thumb-color, var(--md-sys-color-primary));
    /* Use dynamic color */
    box-shadow: 0 0 0 2px var(--slider-thumb-color-focus, var(--md-sys-color-primary-container));
}

/* Filtered prompt style */
prompt-controller[filtered] .prompt-card {
    border: 2px solid var(--md-sys-color-error);
}

prompt-controller[filtered] .prompt-text-input {
    background-color: var(--md-sys-color-error-container);
    color: var(--md-sys-color-on-error-container);
    border-color: var(--md-sys-color-error);
}


.slider-container {
    width: 100%;
    display: flex;
    align-items: center;
    /* Container height should accommodate the thumb's full diameter + a little padding */
    height: calc(var(--slider-thumb-size) + 8px);
    /* e.g., 18px + 8px = 26px */
    margin: 4px 0;
    box-sizing: border-box;
}

.weight-slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    /* CRITICAL: Ensure the input itself spans the full desired width */
    height: var(--slider-track-height);
    /* Input element's height IS the track height */
    background: transparent;
    /* Input element itself is transparent for WebKit, track styled by pseudo */
    /* For Firefox/MS, this might be the 'unfilled' track color */
    outline: none;
    cursor: pointer;
    border-radius: var(--border-radius-full);
    /* Apply to input for FF/MS track rounding */
    margin: 0;
    padding: 0;
    display: block;
}

/* --- WebKit (Chrome, Safari, Edge) --- */
.weight-slider::-webkit-slider-runnable-track {
    width: 100%;
    /* CRITICAL: Track pseudo-element must also be 100% */
    height: var(--slider-track-height);
    cursor: pointer;
    background: linear-gradient(to right,
            var(--slider-thumb-color, var(--md-sys-color-primary)) var(--slider-fill-percent, 0%),
            /* Color stops at fill percent */
            var(--slider-track-background-off) var(--slider-fill-percent, 0%)
            /* Background starts at fill percent */
        );
    /*
        Explanation of the gradient:
        1. From 0% to --slider-fill-percent: Use --slider-thumb-color.
        2. From --slider-fill-percent to 100%: Use --slider-track-background-off.
        This creates a sharp division.
    */
    border-radius: var(--border-radius-full);
    border: none;
}

.weight-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: var(--slider-thumb-size);
    height: var(--slider-thumb-size);
    background: var(--slider-thumb-color, var(--md-sys-color-primary));
    border-radius: 50%;
    border: none;
    cursor: pointer;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);
    transition: transform 0.1s ease-out;
    /*
      Centering the thumb on the track:
      The thumb is taller than the track. We need to pull it upwards.
      (track_height - thumb_height) / 2
      Example: (4px - 18px) / 2 = -14px / 2 = -7px
    */
    margin-top: calc((var(--slider-track-height) - var(--slider-thumb-size)) / 2);
    position: relative;
    /* Ensure it's above the track */
    z-index: 2;
}

.weight-slider::-webkit-slider-thumb:hover {
    transform: scale(1.1);
}

.weight-slider::-webkit-slider-thumb:active {
    transform: scale(1.05);
}


/* --- Mozilla Firefox --- */
/* Set background on input for Firefox's track's unfilled part */
.weight-slider {
    /* ... existing .weight-slider styles ... */
    /* For Firefox, the input's background can be the track's off state */
    /* background: var(--slider-track-background-off); -- This was in the input, let's ensure it's specifically on track */
}

.weight-slider::-moz-range-track {
    width: 100%;
    height: var(--slider-track-height);
    cursor: pointer;
    background: var(--slider-track-background-off);
    /* Unfilled part */
    border-radius: var(--border-radius-full);
    border: none;
}

.weight-slider::-moz-range-progress {
    height: var(--slider-track-height);
    background-color: var(--slider-thumb-color, var(--md-sys-color-primary));
    /* Filled part */
    border-radius: var(--border-radius-full);
    border: none;
}

.weight-slider::-moz-range-thumb {
    width: var(--slider-thumb-size);
    height: var(--slider-thumb-size);
    background: var(--slider-thumb-color, var(--md-sys-color-primary));
    border-radius: 50%;
    border: none;
    cursor: pointer;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);
    transition: transform 0.1s ease-out;
    /* Firefox usually centers thumbs well on their tracks by default */
}

.weight-slider::-moz-range-thumb:hover {
    transform: scale(1.1);
}

.weight-slider::-moz-range-thumb:active {
    transform: scale(1.05);
}